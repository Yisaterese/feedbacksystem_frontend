{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000';\nexport const fetchFeedback = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/entries`);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to fetch feedback');\n    }\n    return data.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch feedback');\n  }\n};\nexport const submitFeedback = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/feedback/entry`, formData);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to submit feedback');\n    }\n    return data.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to submit feedback');\n  }\n};\n\n// Additional API functions\nexport const getFeedbackById = async feedbackId => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/entry/${feedbackId}`);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Feedback not found');\n    }\n    return data.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Feedback not found');\n  }\n};\nexport const updateFeedback = async (feedbackId, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/feedback/entry/${feedbackId}`, updatedData);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to update feedback');\n    }\n    return data.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update feedback');\n  }\n};\nexport const deleteFeedback = async feedbackId => {\n  try {\n    const response = await axios.delete(`${API_URL}/feedback/entry/${feedbackId}`);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to delete feedback');\n    }\n    return true;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to delete feedback');\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchFeedback","response","get","data","success","Error","message","error","_error$response","_error$response$data","submitFeedback","formData","post","_error$response2","_error$response2$data","getFeedbackById","feedbackId","_error$response3","_error$response3$data","updateFeedback","updatedData","put","_error$response4","_error$response4$data","deleteFeedback","delete","_error$response5","_error$response5$data"],"sources":["C:/Users/Semicolon Labs/Downloads/fidify/front-end/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000';\n\nexport const fetchFeedback = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/entries`);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to fetch feedback');\n    }\n    return data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch feedback');\n  }\n};\n\nexport const submitFeedback = async (formData) => {\n  try {\n    const response = await axios.post(`${API_URL}/feedback/entry`, formData);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to submit feedback');\n    }\n    return data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to submit feedback');\n  }\n};\n\n// Additional API functions\nexport const getFeedbackById = async (feedbackId) => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/entry/${feedbackId}`);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Feedback not found');\n    }\n    return data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Feedback not found');\n  }\n};\n\nexport const updateFeedback = async (feedbackId, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/feedback/entry/${feedbackId}`, updatedData);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to update feedback');\n    }\n    return data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to update feedback');\n  }\n};\n\nexport const deleteFeedback = async (feedbackId) => {\n  try {\n    const response = await axios.delete(`${API_URL}/feedback/entry/${feedbackId}`);\n    const data = response.data;\n    if (!data.success) {\n      throw new Error(data.message || 'Failed to delete feedback');\n    }\n    return true;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to delete feedback');\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}